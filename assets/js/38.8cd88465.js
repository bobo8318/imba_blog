(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{386:function(_,v,p){"use strict";p.r(v);var e=p(43),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,p=_._self._c||v;return p("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[p("h1",{attrs:{id:"flask"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#flask"}},[_._v("#")]),_._v(" flask")]),_._v(" "),p("h3",{attrs:{id:"_1-install-require"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_1-install-require"}},[_._v("#")]),_._v(" 1.install & require")]),_._v(" "),p("blockquote",[p("p",[_._v("conda install flask")]),_._v(" "),p("p",[_._v("conda install -r requires.txt")])]),_._v(" "),p("blockquote",[p("p",[_._v("requires.txt contents:")]),_._v(" "),p("p",[_._v("alembic")]),_._v(" "),p("p",[_._v("amqp")]),_._v(" "),p("p",[_._v("billiard")]),_._v(" "),p("p",[_._v("celery")]),_._v(" "),p("p",[_._v("certifi")]),_._v(" "),p("p",[_._v("chardet")]),_._v(" "),p("p",[_._v("Flask")]),_._v(" "),p("p",[_._v("Flask-Migrate")]),_._v(" "),p("p",[_._v("Flask-Script # 插入脚本")]),_._v(" "),p("p",[_._v("Flask-Session")]),_._v(" "),p("p",[_._v("Flask-SQLAlchemy # 操作数据库")]),_._v(" "),p("p",[_._v("Flask-WTF #表单")]),_._v(" "),p("p",[_._v("Flask-markdown")]),_._v(" "),p("p",[_._v("Jinja2")]),_._v(" "),p("p",[_._v("kombu")]),_._v(" "),p("p",[_._v("Mako")]),_._v(" "),p("p",[_._v("virtualenv #版本控制")])]),_._v(" "),p("ul",[p("li",[p("p",[_._v("2.create project")]),_._v(" "),p("ul",[p("li",[p("p",[_._v("目录结构")]),_._v(" "),p("blockquote",[p("p",[_._v("./")]),_._v(" "),p("p",[_._v("----readme.md")]),_._v(" "),p("p",[_._v("----app/")]),_._v(" "),p("p",[_._v("----|----  __ init __.py")]),_._v(" "),p("p",[_._v("----|----models.py")]),_._v(" "),p("p",[_._v("----|----static/")]),_._v(" "),p("p",[_._v("----|----templates/")]),_._v(" "),p("p",[_._v("----|----views.py")]),_._v(" "),p("p",[_._v("----config.py")]),_._v(" "),p("p",[_._v("----manage.py")]),_._v(" "),p("p",[_._v("requirements.txt")])])]),_._v(" "),p("li",[p("p",[_._v("app/__ init __.py")]),_._v(" "),p("blockquote",[p("p",[_._v("from flask import Flask")]),_._v(" "),p("p",[_._v("app = Flask(__ name __)")]),_._v(" "),p("p",[_._v('app.config.from_object("config")')]),_._v(" "),p("p",[_._v("from app import  views, models")])])]),_._v(" "),p("li",[p("p",[_._v("app/views.py 主逻辑")]),_._v(" "),p("blockquote",[p("p",[_._v("from app import app")]),_._v(" "),p("p",[_._v("from flask import render_template")]),_._v(" "),p("p",[_._v("@app.route('/')")]),_._v(" "),p("p",[_._v("def index():")]),_._v(" "),p("p",[_._v('​\t#return "hello world"')]),_._v(" "),p("p",[_._v("​\treturn render_template('index.html')")])])]),_._v(" "),p("li",[p("p",[_._v("manage.py")]),_._v(" "),p("blockquote",[p("p",[_._v("from flask.ext.script import Manager, Server")]),_._v(" "),p("p",[_._v("from app import app")]),_._v(" "),p("p",[_._v("manager = Manager(app)")]),_._v(" "),p("p",[_._v('manager.add_command("runserver", Server(host="127.0.0.1", port=5000, use_debugger=True))')]),_._v(" "),p("p",[_._v("if  __ name __ == '__ main __':")]),_._v(" "),p("p",[_._v("​\tmanager.run()")])])])])]),_._v(" "),p("li",[p("p",[_._v("run app")]),_._v(" "),p("blockquote",[p("p",[_._v("python manage.py flask")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);