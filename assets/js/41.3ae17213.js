(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{386:function(s,n,a){"use strict";a.r(n);var e=a(43),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"文件备份工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件备份工具"}},[s._v("#")]),s._v(" 文件备份工具")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用工具")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("watchdog 监测文件变化")])]),s._v(" "),a("li",[a("p",[s._v("configparser 读取配置文件内容")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("配置文件内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[DEFAULT]\nServerAliveInterval = 45\nCompression = yes\nCompressionLevel = 9\nForwardX11 = yes\n  \n[bitbucket.org]\nUser = Atlan\n  \n[topsecret.server.com]\nPort = 50022\nForwardX11 = no\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import configparser #引入模块\nconfig = configparser.ConfigParser()    #类中一个方法 #实例化一个对象\n\nconfig[\"DEFAULT\"] = {'ServerAliveInterval': '45',\n                      'Compression': 'yes',\n                     'CompressionLevel': '9',\n                     'ForwardX11':'yes'\n                     }\t#类似于操作字典的形式\n\n//读取\nconfig.read('example.ini')\nprint(config.sections())        #   ['bitbucket.org', 'topsecret.server.com']\nprint(config['bitbucket.org'][\"user\"])  # Atlan\n# items 得到section的所有键值对\nvalue = config.items(\"driver\")\nprint(value)\ndb_options = cf.options(\"db\")\nprint db_options    #['db_host', 'db_port', 'db_user', 'db_pass']\n//修改\nconfig.add_section('yuan')  #添加section\nconfig.remove_section('bitbucket.org') #删除section\nconfig.remove_option('topsecret.server.com',\"forwardx11\") #删除一个配置想\n\nconfig.set('topsecret.server.com','k1','11111')\nconfig.set('yuan','k2','22222')\n\nwith open('new2.ini','w') as f:\n     config.write(f)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("apscheduler 定时任务 https://mp.weixin.qq.com/s/TTUFQRQ_DiKktJ5-J8O8Pg")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("安装")]),s._v(" "),a("blockquote",[a("p",[s._v("pip install apscheduler")])])]),s._v(" "),a("li",[a("p",[s._v("基本概念")]),s._v(" "),a("ul",[a("li",[s._v("触发器（triggers）：")]),s._v(" "),a("li",[s._v("作业存储器（job stores）：")]),s._v(" "),a("li",[s._v("执行器（executors）：")]),s._v(" "),a("li",[s._v("调度器（schedulers）：")])])]),s._v(" "),a("li",[a("p",[s._v("使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#间隔性任务\nfrom datetime import datetime #打印时间用\nimport os #判断操作系统类型\nfrom apscheduler.schedulers.blocking import BlockingScheduler\n\ndef tick():\n    print('Tick! The time is: %s' % datetime.now())\n\nif __name__ == '__main__':\n    scheduler = BlockingScheduler()\n    #触发器为 interval，每隔 3 秒执行一次，另外的触发器为 date，cron。date 按特定时间点触发，cron 则按固定的时间间隔触发\n    scheduler.add_job(tick, 'interval', seconds=3)\n    print('Press Ctrl+{0} to exit'.format('Break' if os.name == 'nt' else 'C    '))\n\ntry:\n    scheduler.start()\nexcept (KeyboardInterrupt, SystemExit):\n    pass\n    \n# cron 任务\nfrom datetime import datetime\nimport os\nfrom apscheduler.schedulers.blocking import BlockingScheduler\n\ndef tick():\n    print('Tick! The time is: %s' % datetime.now())\n\nif __name__ == '__main__':\n    scheduler = BlockingScheduler()\n    #hour =19 ,minute =23 这里表示每天的19：23 分执行任务。这里可以填写数字，也可以填写字符串\n    scheduler.add_job(tick, 'cron', hour=19,minute=23)\n    print('Press Ctrl+{0} to exit'.format('Break' if os.name == 'nt' else 'C    '))\n\ntry:\n\tscheduler.start()\nexcept (KeyboardInterrupt, SystemExit):\n\tpass\n\t\nhour =19 , minute =23\nhour ='19', minute ='23'\nminute = '*/3' 表示每 5 分钟执行一次\nhour ='19-21', minute= '23' 表示 19:23、 20:23、 21:23 各执行一次任务\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("ftplib ftp文件操作")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ftp=FTP() #设置变量\nftp.set_debuglevel(2) #打开调试级别2，显示详细信息\nftp.connect(“IP”,“port”) #连接的ftp sever和端口\nftp.login(“user”,“password”)#连接的用户名，密码\nprint ftp.getwelcome() #打印出欢迎信息\nftp.cmd(“xxx/xxx”) #更改远程目录\nbufsize=1024 #设置的缓冲区大小\nfilename=“filename.txt” #需要下载的文件\nfile_handle=open(filename,“wb”).write #以写模式在本地打开文件\nftp.retrbinaly(“RETR filename.txt”,file_handle,bufsize) #接收服务器上文件并写入本地文件\nftp.set_debuglevel(0) #关闭调试模式\nftp.quit #退出ftp\nftp相关命令操作\nftp.cwd(pathname) #设置FTP当前操作的路径\nftp.dir() #显示目录下文件信息\nftp.nlst() #获取目录下的文件\nftp.mkd(pathname) #新建远程目录\nftp.pwd() #返回当前所在位置\nftp.rmd(dirname) #删除远程目录\nftp.delete(filename) #删除远程文件\nftp.rename(fromname, toname)#将fromname修改名称为toname。\nftp.storbinaly(“STOR filename.txt”,file_handel,bufsize) #上传目标文件\nftp.retrbinary(“RETR filename.txt”,file_handel,bufsize)#下载FTP文件\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("pyinstaller python程序打包")])])])]),s._v(" "),a("li",[a("p",[s._v("类说明")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("配置文件内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[local]\nlocaldir = E:/ftp\n\n[ftp]\nhost = 192.168.1.11\nport = 21\nuser = ftpuser\npassword = ftpuser\nftppath = back\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("ftp工具类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from ftplib import FTP\n\nclass FtpUtil:\n    def __init__(self, ftpconfig):\n        self.config = self.converter(ftpconfig)\n        self.ftp = FTP()\n        self.ftp.set_debuglevel(2) #打开调试级别2，显示详细信息\n    def login(self):\n        self.ftp.connect(self.config['host'], int(self.config['port']))\n        self.ftp.login(self.config['user'], self.config['password'])\n        print(self.ftp.getwelcome()) #打印出欢迎信息\n    def upFile(self, filepath):\n\n        fp = open(filepath,'rb')\n\n        cmd = 'STOR %s/%s' % (self.config['ftppath'],self.getFileNameByPath(filepath)[0])\n        print(cmd)\n        return self.ftp.storbinary(cmd, fp)\n    #将配置文件读出的[(,),(,),(,)] 转换为dict\n    def converter(self, source):\n        result = {}\n        for element in source:\n            result[element[0]] = element[1]\n        return result\n    # 根据文件路径获取文件名\n    def getFileNameByPath(self, filepath):\n        if '/' in filepath:\n            strlist = filepath.split('/')\n            return strlist[-1:]\n        if '\\\\'  in filepath:\n            strlist = filepath.split('\\\\')\n            return strlist[-1:]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("文件监测类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("一些基础知识")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1.字符串截取\nstr = '12345678'\nprint str[0:1] # 输出str位置0开始到位置1以前的字符\nprint str[1:6] # 输出str位置1开始到位置6以前的字符\nstr = '0000' + str(num)\t# 合并字符串\nprint str[-5:]\t\t# 输出字符串右5位\n2.字符串替换 变量.replace(\"被替换的内容\"，\"替换后的内容\"[，次数])\nstr = 'akakak'\nstr = str.replace('k',' 8')\t# 将字符串里的k全部替换为8\n3.字符串查找\nstr = 'a,hello'\nprint str.find('hello')\t# 在字符串str里查找字符串hello 输出结果2\n4.字符分割\nstr = 'a,b,c,d'\nstrlist = str.split(',')\n5.字符串包含\nstr in strs \nstr1.find(str2)>=0\n6.转换\nint(x [,base ])         将x转换为一个整数    \nlong(x [,base ])        将x转换为一个长整数    \nfloat(x )               将x转换到一个浮点数    \ncomplex(real [,imag ])  创建一个复数    \nstr(x )                 将对象 x 转换为字符串    \nrepr(x )                将对象 x 转换为表达式字符串    \neval(str )              用来计算在字符串中的有效Python表达式,并返回一个对象    \ntuple(s )               将序列 s 转换为一个元组    \nlist(s )                将序列 s 转换为一个列表    \nchr(x )                 将一个整数转换为一个字符    \nunichr(x )              将一个整数转换为Unicode字符    \nord(x )                 将一个字符转换为它的整数值    \nhex(x )                 将一个整数转换为一个十六进制字符串    \noct(x )                 将一个整数转换为一个八进制字符串   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("字典")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//添加字典元素\naa = {'人才':60,'英语':'english','adress':'here'}\nprint(aa) # {'人才': 60, '英语': 'english', 'adress': 'here'}\n#添加方法一：根据键值对添加\naa['价格'] = 100\nprint(aa) # {'人才': 60, '英语': 'english', 'adress': 'here', '价格': 100}\n#添加方法二：使用update方法添加\nxx = {'hhh':'gogogo'}\naa.update(xx)\nprint(aa) # {'人才': 60, '英语': 'english', 'adress': 'here', '价格': 100, 'hhh': 'gogogo'}\n\n//删除字典元素\n# 删除方法一：使用del函数\ndel[aa['adress']] 或者 del aa['adress']\nprint(aa) # {'人才': 60, '英语': 'english', '价格': 100, 'hhh': 'gogogo'}\n#删除方法二：使用pop函数，并返回值\nvv = aa.pop('人才')\nprint(vv) # 60\nprint(aa) # {'英语': 'english', '价格': 100, 'hhh': 'gogogo'}\n# clear方法，删除所有\naa.clear()\nprint(aa) # {}，为空\ndel aa #删除字典\n\n//内置函数\ncmp(dict1, dict2)  #比较两个字典元素。\nlen(dict)              #计算字典元素个数，即键的总数。\nstr(dict)              #输出字典可打印的字符串表示。\ntype(variable)     #返回输入的变量类型，如果变量是字典就返回字典类型。  \n\n\n//内置方法\nradiansdict.clear()    #删除字典内所有元素\nradiansdict.copy()    #返回一个字典的浅复制\nradiansdict.fromkeys()    #创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值\nradiansdict.get(key, default=None)    #返回指定键的值，如果值不在字典中返回default值\nradiansdict.has_key(key)    #如果键在字典dict里返回true，否则返回false\nradiansdict.items()    #以列表返回可遍历的(键, 值) 元组数组\nradiansdict.keys()    #以列表返回一个字典所有的键\nradiansdict.setdefault(key, default=None)    #和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default\nradiansdict.update(dict2)    #把字典dict2的键/值对更新到dict里\nradiansdict.values()    #以列表返回字典中的所有值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("线程相关")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Timer:定时调用函数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from threading import Timer\nt = Timer(interval, function, args=None, kwargs=None)\n# interval 设置的时间(s) \n# function 要执行的任务\n# args，kwargs 传入的参数\n\nt.start()  # 开启定时器\nt.cancel()  # 取消定时器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("中文乱码")]),s._v(" "),a("blockquote",[a("p",[s._v("在 setting.json文件中输入如下代码，保存后运行即可")]),s._v(" "),a("p",[s._v('"code-runner.executorMap": { "python": "set PYTHONIOENCODING=utf-8 && python -u", }')])])])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);