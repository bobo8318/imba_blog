(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{450:function(n,e,t){"use strict";t.r(e);var v=t(43),i=Object(v.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"centos安装nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos安装nginx"}},[n._v("#")]),n._v(" centos安装nginx")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("查看是否已安装过")]),n._v(" "),t("blockquote",[t("p",[n._v("find -name nginx")]),n._v(" "),t("p",[n._v("yum remove nginx //如果已安装需要删除")])])]),n._v(" "),t("li",[t("p",[n._v("下载")]),n._v(" "),t("blockquote",[t("p",[n._v("wget http://nginx.org/download/nginx-1.7.4.tar.gz")]),n._v(" "),t("p",[n._v("yum -y install wget  //安装wget")])])]),n._v(" "),t("li",[t("p",[n._v("解压")]),n._v(" "),t("blockquote",[t("p",[n._v("tar -zxvf nginx-1.7.4.tar.gz")])])]),n._v(" "),t("li",[t("p",[n._v("编译安装")]),n._v(" "),t("blockquote",[t("p",[n._v("yum install gcc-c++")]),n._v(" "),t("p",[n._v("yum install pcre pcre-devel")]),n._v(" "),t("p",[n._v("yum install zlib zlib-devel")]),n._v(" "),t("p",[n._v("yum install openssl openssl--devel")]),n._v(" "),t("p",[n._v("// 报./configure: error: C compiler cc is not found错误 执行下面命令")]),n._v(" "),t("p",[n._v("yum -y install gcc gcc-c++ autoconf automake make")]),n._v(" "),t("p",[n._v("./configure --prefix=/opt/nginx    // 编译的时候用来指定程序存放路径")]),n._v(" "),t("p",[n._v("make")]),n._v(" "),t("p",[n._v("make install")])])]),n._v(" "),t("li",[t("p",[n._v("运行")]),n._v(" "),t("blockquote",[t("p",[n._v("sudo sbin/nginx")])])]),n._v(" "),t("li",[t("p",[n._v("设置开机启动")]),n._v(" "),t("blockquote",[t("p",[n._v("cd /lib/systemd/system/")]),n._v(" "),t("p",[n._v("vi nginx.service")]),n._v(" "),t("p",[n._v("//内容如下")]),n._v(" "),t("p",[n._v("[Unit]\nDescription=nginx service\nAfter=network.target")]),n._v(" "),t("p",[n._v("[Service]\nType=forking\nExecStart=/opt/nginx/sbin/nginx\nExecReload=/opt/nginx/sbin/nginx -s reload\nExecStop=/opt/nginx/sbin/nginx -s quit\nPrivateTmp=true")]),n._v(" "),t("p",[n._v("[Install]\nWantedBy=multi-user.target")]),n._v(" "),t("p",[n._v("//说明")]),n._v(" "),t("p",[n._v("[Unit] 服务的说明\nDescription:描述服务\nAfter:描述服务类别\n[Service]服务运行参数的设置\nType=forking是后台运行的形式\nExecStart为服务的具体运行命令\nExecReload为重启命令\nExecStop为停止命令\nPrivateTmp=True表示给服务分配独立的临时空间\n注意：[Service]的启动、重启、停止命令全部要求使用绝对路径\n[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3")]),n._v(" "),t("p",[n._v("// 加入开机启动")]),n._v(" "),t("p",[n._v("systemctl enable nginx")]),n._v(" "),t("p",[n._v("// 取消开机启动")]),n._v(" "),t("p",[n._v("systemctl disable nginx\n// 常用操作\nsystemctl start nginx.service　         启动nginx服务")]),n._v(" "),t("p",[n._v("systemctl stop nginx.service　          停止服务")]),n._v(" "),t("p",[n._v("systemctl restart nginx.service　       重新启动服务")]),n._v(" "),t("p",[n._v("systemctl list-units --type=service     查看所有已启动的服务")]),n._v(" "),t("p",[n._v("systemctl status nginx.service          查看服务当前状态")]),n._v(" "),t("p",[n._v("systemctl enable nginx.service          设置开机自启动")]),n._v(" "),t("p",[n._v("systemctl disable nginx.service         停止开机自启动")])])])])])}),[],!1,null,null,null);e.default=i.exports}}]);